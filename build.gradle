plugins {
  id 'application'
  id 'checkstyle'
  id 'idea'
  id 'jacoco'
  id 'com.github.ben-manes.versions' version '0.51.0'
  id 'io.spring.dependency-management' version '1.1.7'
  id 'org.owasp.dependencycheck' version '11.1.1'
  id 'org.sonarqube' version '6.0.1.5171'
  id 'org.springframework.boot' version '3.4.1'
  id 'uk.gov.hmcts.java' version '0.12.63'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

application {
  mainClass = 'uk.gov.hmcts.reform.hmc.ApplicationBootstrap'
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

}

idea {
  module {
    // config to allow Intellij to mark test source and resource files correctly to help linting tools
    testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
    testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
    testResourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    testResourceDirs += project.sourceSets.integrationTest.resources.srcDirs
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom runtimeOnly

  integrationTestImplementation.extendsFrom testImplementation
  integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
  integrationTestRuntimeOnly.extendsFrom runtimeOnly

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
  mustRunAfter test
}

checkstyle {
  toolVersion = '10.3.1'
}

tasks.withType(Checkstyle) {
  exclude '**/package-info.java'
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['check'].dependsOn integration

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: hmc-operational-reports-runner"
    property "sonar.projectKey", "uk.gov.hmcts.reform:hmc-operational-reports-runner"
    property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    property "sonar.coverage.exclusions", "**/hmc/ApplicationBootstrap.java"
    property "sonar.exclusions","**/hmc/ApplicationExecutor.java"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

apply from: './gradle/suppress.gradle'
// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'
  }
}

ext {
  set('springCloudVersion', '2024.0.0')
  set('spring-framework.version', '6.2.1')
  set('spring-security.version', '6.4.2')
  set('log4j2.version', '2.24.3')
  set('jackson.version', '2.18.2')
  set('snakeyaml.version', '2.3')
  slf4jVersion = '2.0.16'
  reformLogging = '6.1.9'
  logbackVersion = '1.5.16'
  lombokVersion = '1.18.36'

  // Test versions
  junitJupiterVersion = '5.11.4'
  junitPlatform = '1.11.4'
  testcontainers = '1.20.4'

  libraries = [
    junit5: [
      "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
      "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
      "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}",
      "org.junit.platform:junit-platform-commons:${junitPlatform}",
      "org.junit.platform:junit-platform-engine:${junitPlatform}",
      "org.apiguardian:apiguardian-api:1.1.2"
    ]
  ]
}

dependencies {

  // start::CVE Vulnerability dependency overrides                                                    // MAIN PARENT DEPENDEDNCY

  implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion            // logging-appinsights
  implementation group: 'ch.qos.logback', name: 'logback-core', version: logbackVersion               // logging-appinsights
  implementation group: 'commons-io', name: 'commons-io', version: '2.18.0'                           // commons-fileupload
  implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'        // spring-boot-starter-actuator
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api'                                 // spring-boot-starter-actuator
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j'                            // spring-boot-starter-actuator
  implementation group: 'org.json', name: 'json', version: '20250107'	                                // notifications-java-client
  implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion                         // spring-boot-starter-actuator
  implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: slf4jVersion                      // spring-boot-starter-actuator
  implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '7.0.5.Final'
  
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.2'                    // spring-cloud-starter-contract-stub-runner
  integrationTestImplementation group: 'net.minidev', name: 'json-smart', version: '2.5.1'            // spring-cloud-starter-contract-stub-runner
  // end::CVE Vulnerability dependency overrides                                                      // MAIN PARENT DEPENDEDNCY

  // SPRING
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.retry', name: 'spring-retry'

  implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.6.0'


  // HMCTS
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLogging
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: reformLogging
  implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '5.2.1-RELEASE'

  implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
  implementation group: 'jakarta.inject', name: 'jakarta.inject-api', version: '2.0.1'
  implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.18.2'
  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.0'
  

  implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.4'

  implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.5'

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '4.1.4'
  testImplementation group: 'org.testcontainers', name: 'postgresql', version: testcontainers
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: testcontainers
  testImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath
  integrationTestImplementation group: 'org.wiremock', name: 'wiremock', version: '3.9.2'
  integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath
  functionalTestImplementation group: 'com.github.hmcts', name: 'ccd-test-definitions', version: '7.25.0'
  functionalTestImplementation group: 'com.github.hmcts', name: 'befta-fw', version: '9.2.4'
}

bootJar {
  archiveFileName = "hmc-operational-reports-runner.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
