plugins {
  id 'application'
  id 'checkstyle'
  id 'idea'
  id 'jacoco'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'io.freefair.lombok' version '6.5.1'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.sonarqube' version '3.3'
  id 'org.springframework.boot' version '2.7.3'
  id 'uk.gov.hmcts.java' version '0.12.40'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  idea {
    module {
      // config to allow Intellij to mark test source and resource files correctly to help linting tools
      testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
      testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
      testResourceDirs += project.sourceSets.functionalTest.resources.srcDirs
      testResourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
  }

}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom runtimeOnly

  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom runtimeOnly

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
  mustRunAfter test
}

checkstyle {
  toolVersion '10.3.1'
}

tasks.withType(Checkstyle) {
  exclude '**/package-info.java'
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['check'].dependsOn integration

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: hmc-operational-reports-runner"
    property "sonar.projectKey", "uk.gov.hmcts.reform:hmc-operational-reports-runner"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.coverage.exclusions", "**/hmc/ApplicationBootstrap.java"
    property "sonar.exclusions","**/hmc/ApplicationExecutor.java"
  }
}

def versions = [
        junit           : '5.7.2',
        junitPlatform   : '1.7.2',
        lombok          : '1.18.20',
        reformLogging   : '5.1.9',
        jackson         : '2.14.2',
        springBoot      : springBoot.class.package.implementationVersion,
        springFramework : '5.3.20',
        springCloud     : '2020.0.1',
        springfoxSwagger: '3.0.0',
        testcontainers  : '1.16.0'
]

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

apply from: './gradle/suppress.gradle'
// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

ext {
  log4JVersion = "2.17.1"
}

dependencies {
  implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'

  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.71'
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.71'

  implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

  implementation group: 'javax.inject', name: 'javax.inject', version: '1'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.4'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc') {
    exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
  }
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'

  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.7'
  implementation group: 'org.springframework.retry', name: 'spring-retry'

  implementation 'uk.gov.service.notify:notifications-java-client:3.17.3-RELEASE'
  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: '6.0.1'

  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.reformLogging

  // temporary work around for dependency check
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
  implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.jackson, ext: 'pom'

  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion

  implementation group: 'io.rest-assured', name: 'rest-assured'

  implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.5.7.Final'
  runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.5.4'

  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  testImplementation(platform('org.junit:junit-bom:5.8.2'))
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.11.1'
  testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
  testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'
  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '3.1.0'
  testImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testcontainers
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: versions.testcontainers

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath
  integrationTestImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
  integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  integrationTestImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testcontainers
  integrationTestImplementation group: 'net.minidev', name: 'json-smart', version: '2.4.7'
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath
  functionalTestImplementation group: 'com.github.hmcts', name: 'befta-fw', version: '8.7.1'
}

mainClassName = 'uk.gov.hmcts.reform.hmc.ApplicationBootstrap'

bootJar {
  archiveFileName = "hmc-operational-reports-runner.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
